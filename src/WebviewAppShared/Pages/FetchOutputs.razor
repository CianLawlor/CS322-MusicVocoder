@page "/fetchoutputs"
@inject WebviewAppTest.AppState AppState
<div id="frame">
<h1>Output Devices</h1>

<p>Select Output Device.</p>

@if (inputs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Device Name</th>
                <th>Device Channels</th>
            </tr>
        </thead>
        <tbody>
             @for (var i = 0; i< inputs.Length; i+=2)
                {
                    var index = i / 2;
                    <tr>
                    <td>
                            @if(i/2 == inputIndex)
                            {
                                <input id="@i" type="checkbox" @onchange="@(e => SelectInput(index))" checked>
                            } else
                            {
                                <input id="@i" type="checkbox" @onchange="@(e => SelectInput(index))">
                            }

                    </td>
                    <td>@inputs[i]</td>
                    <td>@inputs[i+1]</td>
                </tr>
            }
        </tbody>
    </table>
}
</div>

@code {
    private string[] inputs;
    private int inputIndex;

    protected override async Task OnInitializedAsync()
    {
        inputIndex = AppState.selectedOutputDeviceIndex;
        inputs = AppState.selectedOutputDevice;
    }

    private void SelectInput(int selected)
    {
        System.Diagnostics.Debug.WriteLine(selected);
        AppState.selectedOutputDeviceIndex = selected;
        inputIndex = selected;
        this.StateHasChanged();
    }
}
